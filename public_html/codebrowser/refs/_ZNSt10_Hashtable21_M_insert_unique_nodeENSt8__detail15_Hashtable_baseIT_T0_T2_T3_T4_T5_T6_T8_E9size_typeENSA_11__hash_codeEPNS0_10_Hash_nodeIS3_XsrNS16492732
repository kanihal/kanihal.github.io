<dec f='include/c++/7/bits/hashtable.h' l='665' type='std::_Hashtable::iterator std::_Hashtable::_M_insert_unique_node(std::_Hashtable::size_type __bkt, std::_Hashtable::__hash_code __code, std::_Hashtable::__node_type * __n)'/>
<use f='include/c++/7/bits/hashtable.h' l='1666' u='c' c='_ZNSt10_Hashtable10_M_emplaceESt17integral_constantIbLb1EEDpOT_'/>
<def f='include/c++/7/bits/hashtable.h' l='1699' ll='1734' type='std::_Hashtable::iterator std::_Hashtable::_M_insert_unique_node(std::_Hashtable::size_type __bkt, std::_Hashtable::__hash_code __code, std::_Hashtable::__node_type * __node)'/>
<use f='include/c++/7/bits/hashtable.h' l='1822' u='c' c='_ZNSt10_Hashtable9_M_insertEOT_RKT0_St17integral_constantIbLb1EE'/>
<doc f='include/c++/7/bits/hashtable.h' l='661'>// Insert node with hash code __code, in bucket bkt if no rehash (assumes
      // no element with its key already present). Take ownership of the node,
      // deallocate it on exception.</doc>
