<dec f='include/llvm-7/llvm/Support/FileSystem.h' l='881' type='std::error_code llvm::sys::fs::openFile(const llvm::Twine &amp; Name, int &amp; ResultFD, llvm::sys::fs::CreationDisposition Disp, llvm::sys::fs::FileAccess Access, llvm::sys::fs::OpenFlags Flags, unsigned int Mode = 438)'/>
<use f='include/llvm-7/llvm/Support/FileSystem.h' l='922' u='c' c='_ZN4llvm3sys2fs16openFileForWriteERKNS_5TwineERiNS1_19CreationDispositionENS1_9OpenFlagsEj'/>
<use f='include/llvm-7/llvm/Support/FileSystem.h' l='964' u='c' c='_ZN4llvm3sys2fs20openFileForReadWriteERKNS_5TwineERiNS1_19CreationDispositionENS1_9OpenFlagsEj'/>
<doc f='include/llvm-7/llvm/Support/FileSystem.h' l='865'>/// @brief Opens a file with the specified creation disposition, access mode,
/// and flags and returns a file descriptor.
///
/// The caller is responsible for closing the file descriptor once they are
/// finished with it.
///
/// @param Name The path of the file to open, relative or absolute.
/// @param ResultFD If the file could be opened successfully, its descriptor
///                 is stored in this location. Otherwise, this is set to -1.
/// @param Disp Value specifying the existing-file behavior.
/// @param Access Value specifying whether to open the file in read, write, or
///               read-write mode.
/// @param Flags Additional flags.
/// @param Mode The access permissions of the file, represented in octal.
/// @returns errc::success if \a Name has been opened, otherwise a
///          platform-specific error_code.</doc>
