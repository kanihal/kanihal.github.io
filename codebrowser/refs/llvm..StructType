<inh f='include/llvm-7/llvm/IR/DerivedTypes.h' l='162' c='llvm::CompositeType'/>
<def f='include/llvm-7/llvm/IR/DerivedTypes.h' l='201' ll='323'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='219' c='_ZN4llvm10StructTypeC1ERKS0_'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='220' c='_ZN4llvm10StructTypeaSERKS0_'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='220' c='_ZN4llvm10StructTypeaSERKS0_'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='223' c='_ZN4llvm10StructType6createERNS_11LLVMContextENS_9StringRefE'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='224' c='_ZN4llvm10StructType6createERNS_11LLVMContextE'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='226' c='_ZN4llvm10StructType6createENS_8ArrayRefIPNS_4TypeEEENS_9StringRefEb'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='228' c='_ZN4llvm10StructType6createENS_8ArrayRefIPNS_4TypeEEE'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='229' c='_ZN4llvm10StructType6createERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEENS_9StringRefEb'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='231' c='_ZN4llvm10StructType6createERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEE'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='242' c='_ZN4llvm10StructType3getERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEEb'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='246' c='_ZN4llvm10StructType3getERNS_11LLVMContextEb'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='310' c='_ZNK4llvm10StructType17isLayoutIdenticalEPS0_'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='326' c='_ZNK4llvm4Type13getStructNameEv'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='330' c='_ZNK4llvm4Type20getStructNumElementsEv'/>
<use f='include/llvm-7/llvm/IR/DerivedTypes.h' l='334' c='_ZNK4llvm4Type20getStructElementTypeEj'/>
<use f='include/llvm-7/llvm/IR/DataLayout.h' l='497' c='_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE'/>
<use f='include/llvm-7/llvm/IR/DataLayout.h' l='555' c='_ZN4llvm12StructLayoutC1EPNS_10StructTypeERKNS_10DataLayoutE'/>
<use f='include/llvm-7/llvm/IR/DataLayout.h' l='574' c='_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE'/>
<size>32</size>
<doc f='include/llvm-7/llvm/IR/DerivedTypes.h' l='181'>/// Class to represent struct types. There are two different kinds of struct
/// types: Literal structs and Identified structs.
///
/// Literal struct types (e.g. { i32, i32 }) are uniqued structurally, and must
/// always have a body when created.  You can get one of these by using one of
/// the StructType::get() forms.
///
/// Identified structs (e.g. %foo or %42) may optionally have a name and are not
/// uniqued.  The names for identified structs are managed at the LLVMContext
/// level, so there can only be a single identified struct with a given name in
/// a particular LLVMContext.  Identified structs may also optionally be opaque
/// (have no body specified).  You get one of these by using one of the
/// StructType::create() forms.
///
/// Independent of what kind of struct you have, the body of a struct type are
/// laid out in memory consecutively with the elements directly one after the
/// other (if the struct is packed) or (if not packed) with padding between the
/// elements as defined by DataLayout (which is required to match what the code
/// generator for a target expects).
///</doc>
<fun r='_ZN4llvm10StructTypeC1ERNS_11LLVMContextE'/>
<mbr r='llvm::StructType::SymbolTableEntry' o='192' t='void *'/>
<fun r='_ZN4llvm10StructTypeC1ERKS0_'/>
<fun r='_ZN4llvm10StructTypeaSERKS0_'/>
<fun r='_ZN4llvm10StructType6createERNS_11LLVMContextENS_9StringRefE'/>
<fun r='_ZN4llvm10StructType6createERNS_11LLVMContextE'/>
<fun r='_ZN4llvm10StructType6createENS_8ArrayRefIPNS_4TypeEEENS_9StringRefEb'/>
<fun r='_ZN4llvm10StructType6createENS_8ArrayRefIPNS_4TypeEEE'/>
<fun r='_ZN4llvm10StructType6createERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEENS_9StringRefEb'/>
<fun r='_ZN4llvm10StructType6createERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEE'/>
<fun r='_ZN4llvm10StructType6createENS_9StringRefEPNS_4TypeEDpPT_'/>
<fun r='_ZN4llvm10StructType3getERNS_11LLVMContextENS_8ArrayRefIPNS_4TypeEEEb'/>
<fun r='_ZN4llvm10StructType3getERNS_11LLVMContextEb'/>
<fun r='_ZN4llvm10StructType3getEPNS_4TypeEDpPT_'/>
<fun r='_ZNK4llvm10StructType8isPackedEv'/>
<fun r='_ZNK4llvm10StructType9isLiteralEv'/>
<fun r='_ZNK4llvm10StructType8isOpaqueEv'/>
<fun r='_ZNK4llvm10StructType7isSizedEPNS_15SmallPtrSetImplIPNS_4TypeEEE'/>
<fun r='_ZNK4llvm10StructType7hasNameEv'/>
<fun r='_ZNK4llvm10StructType7getNameEv'/>
<fun r='_ZN4llvm10StructType7setNameENS_9StringRefE'/>
<fun r='_ZN4llvm10StructType7setBodyENS_8ArrayRefIPNS_4TypeEEEb'/>
<fun r='_ZN4llvm10StructType7setBodyEPNS_4TypeEDpPT_'/>
<fun r='_ZN4llvm10StructType18isValidElementTypeEPNS_4TypeE'/>
<fun r='_ZNK4llvm10StructType13element_beginEv'/>
<fun r='_ZNK4llvm10StructType11element_endEv'/>
<fun r='_ZNK4llvm10StructType8elementsEv'/>
<fun r='_ZNK4llvm10StructType17isLayoutIdenticalEPS0_'/>
<fun r='_ZNK4llvm10StructType14getNumElementsEv'/>
<fun r='_ZNK4llvm10StructType14getElementTypeEj'/>
<fun r='_ZN4llvm10StructType7classofEPKNS_4TypeE'/>
